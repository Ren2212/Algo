#include<stdio.h>
#include<stdlib.h>
#include<time.h>
#include <sys/time.h>
#define SIZE 100000
#define SIZE1 6
void insertionsort(int a[],int n)
{
    int i,j;
    int key;
    for (i=1;i<=n;i++)
    {
        key=a[i];
        j=i-1;
        while(j>=0 && a[j]>key)
        {
            a[j+1]=a[j];
            j--;
        }
        a[j+1]=key;
    }
}
int main()
{
    struct timeval tv,tv1;
    struct timezone tz,tz1;
    struct tm *tm;
    clock_t start,end;
    int i,n,a1[SIZE1],total;
    long int a[SIZE];
    FILE *fptr;

    printf("Input number are: \n");
    for (i=0;i<SIZE1;i++)
    {
        scanf("%d",&a1[i]);
    }
    gettimeofday(&tv, &tz);
    insertionsort(a1,SIZE1);
    tm=localtime(&tv.tv_sec);
    printf("It took %d ms to do the sorting \n",tm->tm_sec);

    fptr = fopen("merge.txt","w");
    for (i=0;i<n;i++)
    {
      fprintf(fptr,"%d, ",rand()%1000);
    }
    fflush(fptr);
    fclose(fptr);
    fptr = fopen("merge.txt","r");
    start = clock();
    for(i=0;i<SIZE;i++)
    {
       fscanf(fptr,"%d",&a[i]);
    }
    fclose(fptr);
    insertionsort(a,SIZE);
    end = clock();
    fptr=fopen("merge1.text","w");
    for (i=0;i<SIZE;i++)
    {
        fprintf(fptr,"%d, ",a[i]);
    }
    fclose(fptr);
    total = ((double)(end-start))*1000/CLOCKS_PER_SEC;
    printf("For 1M input it took %d ms\n",total);
    printf("Time difference: %d ms\n",total-tm->tm_sec);
    return 0;
}
